{"version":3,"sources":["core/constants/routes.ts","core/constants/colors.ts","modules/Authentication/components/PasswordReset/StyledPasswordReset.ts","core/store/actions/constans.d.ts","core/store/actions/authActions.ts","modules/HomePage/WordsList/constants.ts","modules/Authentication/components/PasswordReset/PasswordReset.tsx","modules/Authentication/components/PasswordReset/constants.ts","modules/Authentication/components/SignIn/StyledSignIn.ts","modules/Authentication/components/SignIn/SignIn.tsx","modules/Authentication/components/SignIn/constants.ts","modules/Authentication/components/SignUp/StyledSignUp.ts","modules/Authentication/components/SignUp/SignUp.tsx","modules/Authentication/components/SignUp/constants.ts","modules/Authentication/Authentication.tsx","core/firebase/firebaseConfig.ts","core/firebase/index.ts","modules/HomePage/StatisticsPage/ShortTermStatistics/StyledShortTermStatistics.ts","modules/HomePage/StatisticsPage/ShortTermStatistics/ShortTermStatistics.tsx","core/store/actions/wordsActions.ts","modules/HomePage/Score/StyledScore.ts","modules/HomePage/Score/Score.tsx","modules/HomePage/WordsList/StyledWordList.ts","modules/HomePage/WordsList/WordsList.tsx","modules/HomePage/SpeechRecording/StyledSpeechRecording.ts","modules/HomePage/SpeechRecording/SpeechRecording.tsx","modules/HomePage/MainPage/StyledMainPage.ts","modules/HomePage/MainPage/MainPage.tsx","modules/HomePage/StatisticsPage/LongTermStatistics/StyledLongTermStatistics.ts","modules/HomePage/StatisticsPage/LongTermStatistics/LongTermStatistics.tsx","modules/HomePage/MainPage/StartPage/StyledStartPage.ts","modules/HomePage/MainPage/StartPage/StartPage.tsx","modules/HomePage/HomePage.tsx","core/routes/Routes.tsx","App.tsx","core/i18n/index.ts","core/store/reducers/currentAuth.ts","core/store/reducers/currentWords.ts","core/store/reducers/rootReducer.ts","core/firebase/firebaseAuthQueries.ts","core/store/sagas/authSaga/resetPasswordSaga.ts","core/store/sagas/authSaga/sighOutSaga.ts","core/store/sagas/authSaga/signInGoogleSaga.ts","core/store/sagas/authSaga/signInSaga.ts","core/store/sagas/authSaga/signUpSaga.ts","core/store/sagas/wordsSaga/constants.ts","core/store/sagas/wordsSaga/getWordsSaga.ts","core/store/sagas/wordsSaga/setWordSaga.ts","core/store/sagas/wordsSaga/allWordsSaga.ts","core/store/sagas/index.ts","core/store/index.ts","index.tsx"],"names":["AuthRoutes","MainRoutes","Color","ActionTypes","Style","Container","styled","div","Button","AuthButton","AuthButtonText","AuthButtonTextHover","Form","MainAuthBorder","Title","Links","Accept","span","AuthButtonAccept","wordsURL","Group","signInAction","user","type","SIGN_IN","payload","signErrorAction","SIGN_ERROR","PasswordReset","useState","email","setEmail","dispatch","useDispatch","t","useTranslation","onChangeHandler","useCallback","event","currentTarget","name","value","sendResetEmail","ASYNC_RESET_PASSWORD","asyncResetPassword","Item","id","placeholder","onChange","className","onClick","to","Styled","AuthGoogleButtonBackgroundColor","AuthGoogleButtonHover","MainText","SignIn","password","setPassword","logginGoogle","ASYNC_SIGN_IN_GOOGLE","asyncSignInGoogle","logginEmailAndPassword","ASYNC_SIGN_IN","asyncSignInAction","prefix","UserOutlined","suffix","title","InfoCircleOutlined","style","color","AuthFormIcon","Password","plain","GoogleOutlined","SignUp","displayName","setDisplayName","history","useHistory","onChangeHandlerEmail","onChangeHandlerPassword","onChangeHandlerName","createUser","preventDefault","ASYNC_SIGN_UP","asyncSignUp","push","home","error","toast","message","Authentication","path","signIn","component","signUp","passwordReset","from","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","REACT_APP_APP_ID","firebaseApp","firebase","apps","length","app","initializeApp","auth","firestore","database","storage","ref","generateUserDocument","a","userRef","doc","uid","get","exists","photoURL","set","console","getUserDocument","userDocument","data","Words","UnpredWords","GuessedWords","Buttons","ShortTermStatistics","guessedWords","setGuessedWords","unpredWords","setUnpredWords","getAllQuessedWords","useSelector","state","currentWords","quessedWords","getAllUnpredictableWords","useEffect","audioPlay","url","Audio","audioUrl","play","handlerAudioButtons","audio","hanlderBackButton","mainPage","hanlderStatisticsButton","longTermStatistics","map","res","SoundOutlined","word","transcription","i","GetWordsActions","words","GET_WORDS","GetWordsErrorActions","GET_WORDS_ERROR","AsyncGetWordsActions","ASYNC_GET_WORDS","ClearWordsActions","CLEAR_WORDS","Maintext","Score","getWordsFetch","speechWord","setWord","getAllWords","allWords","getAllScore","score","setScore","filter","item","some","elem","includes","toLocaleLowerCase","numberOfPoints","Number","group","toFixed","prevNumberOfPoints","success","QUESSED_WORDS","UNPREDICTABLE_WORDS","SetUnpredictableWordsActions","SET_SCORE","SetScoreActions","Groups","MainImage","WordsContainer","WordsBorder","WordsText","SpokenWord","WordsList","getWordsGroup","setWords","startImageUrl","image","setImage","spokenWord","setSpokenWord","ASYNC_ALL_WORDS_SESSION","getImages","imageUrl","handlerButtonsGroups","handlerImagesButtons","src","CommentOutlined","undefined","SpeechRecording","useSpeechRecognition","transcript","resetTranscript","microphoneRef","useRef","SpeechRecognition","browserSupportsSpeechRecognition","alert","renderSpeech","current","classList","add","startListening","language","stopHandle","remove","stopListening","handleReset","ASYNC_SET_WORDS","Header","MainPage","currentAuth","dbScore","setDbScore","child","on","snapshot","val","signOut","ASYNC_SIGN_OUT","handleResultsButton","shortTermStatistics","now","Date","toLocaleString","UsersTable","table","LongTermStatistics","info","setInfo","Object","values","sorted","sort","b","handlerSortButtons","date","StartPage","handleStartButton","HomePage","startPage","Routes","onAuthStateChanged","userAuth","login","App","i18n","use","LanguageDetector","initReactI18next","init","resources","en","translation","EN","lng","fallbackLng","react","useSuspense","initialState","action","SIGN_OUT","RESET_PASSW","SIGN_UP","SET_WORDS","ALL_WORDS_SESSION","flat","rootReducer","combineReducers","provider","GoogleAuthProvider","resetPassword","sendPasswordResetEmail","signInEmailAndPassword","signInWithEmailAndPassword","signInWithGoogle","signInWithPopup","signUpEmailAndPassword","createUserWithEmailAndPassword","watchAuthResetPassword","workerAuthResetPassword","call","put","takeLatest","watchAuthSignOut","workerAuthSignOut","watchAuthSignInGoogle","workerAuthSignInGoogle","authChannel","workerAuthSignIn","watchAuthSignIn","watchAuthSignUp","workerAuthSignUp","watchWordsGet","fetchWordsAsync","page","Math","floor","random","ceil","fetch","then","json","wordsFetch","numbers","Set","size","randomWord","items","arr","Array","watchWordsSet","workerSetWordsAsync","watchAllWords","workerAllWordsAsync","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.485f785a.chunk.js","sourcesContent":["export enum AuthRoutes {\r\n  signIn = '/signIn',\r\n  signUp = '/signUp',\r\n  passwordReset = '/passwordReset',\r\n  home = '/home',\r\n}\r\n\r\nexport enum MainRoutes {\r\n  shortTermStatistics = '/ShortTermStatistics',\r\n  longTermStatistics = '/LongTermStatistics',\r\n  mainPage = '/MainPage',\r\n  startPage = '/StartPage',\r\n}\r\n","export enum Color {\r\n  AuthButton = 'linear-gradient(90deg,rgba(151, 11, 221, 1) 0%, rgba(128, 11, 93, 1) 35%,rgba(237, 120, 10, 1) 100% );',\r\n  AuthButtonTextHover = ' rgba(0, 0, 0, 0.25)',\r\n  MainAuthBorder = 'rgba(0, 0, 0, 0.25)',\r\n  MainAuthBoxShadow = 'inset 0 0 0 1px #337ab7',\r\n  AuthFormIcon = 'rgba(0,0,0,.45)',\r\n  AuthGoogleButtonBackgroundColor = 'white',\r\n  AuthGoogleButtonHover = '0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.25)',\r\n  AuthButtonText = 'white',\r\n  AuthButtonAccept = 'green',\r\n  WordsBorder = '1px solid gray',\r\n  GuessedWords = 'green',\r\n  UnpredWords = 'red',\r\n}\r\n","import styled from 'styled-components';\r\nimport { Color } from '@core/constants/colors';\r\n\r\nconst Style = {\r\n  Container: styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n    height: 500px;\r\n    border-radius: 3px;\r\n    padding-top: 20px;\r\n  `,\r\n  Button: styled.div`\r\n    width: 250px;\r\n    & > .ResetPas {\r\n      width: 200px;\r\n      background: ${Color.AuthButton}\r\n      border: none;\r\n      font-size: 18px;\r\n      height: 30px;\r\n      color: ${Color.AuthButtonText};\r\n      transition: 0.4s linear;\r\n    }\r\n    & > .ResetPas:hover {\r\n      color: ${Color.AuthButtonTextHover};\r\n      border: none;\r\n    }\r\n  `,\r\n  Form: styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n    border: 1px solid ${Color.MainAuthBorder};\r\n    padding: 80px;\r\n    box-shadow: ${Color.MainAuthBorder};\r\n  `,\r\n  Title: styled.div`\r\n    font-size: 30px;\r\n    font-style: italic;\r\n    padding-bottom: 30px;\r\n  `,\r\n  Links: styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    text-align: center;\r\n    justify-content: space-between;\r\n    margin: 20px 0;\r\n  `,\r\n  Accept: styled.span`\r\n    color: ${Color.AuthButtonAccept};\r\n  `,\r\n};\r\n\r\nexport default Style;\r\n","export enum ActionTypes {\r\n  SIGN_IN = 'SIGN_IN',\r\n  SIGN_UP = 'SIGN_UP',\r\n  SIGN_OUT = 'SIGN_OUT',\r\n  RESET_PASSW = 'RESET_PASSW',\r\n  RESET_PASSW = 'RESET_PASSW',\r\n  SIGN_ERROR = 'SIGN_ERROR',\r\n  ASYNC_SIGN_IN = 'ASYNC_SIGN_IN',\r\n  ASYNC_SIGN_OUT = 'ASYNC_SIGN_OUT',\r\n  ASYNC_SIGN_IN_GOOGLE = 'ASYNC_SIGN_IN_GOOGLE',\r\n  ASYNC_SIGN_UP = 'ASYNC_SIGN_UP',\r\n  ASYNC_RESET_PASSWORD = 'ASYNC_RESET_PASSWORD',\r\n  GET_WORDS = 'GET_WORDS',\r\n  SET_WORDS = 'SET_WORDS',\r\n  ASYNC_GET_WORDS = 'ASYNC_GET_WORDS',\r\n  ASYNC_SET_WORDS = 'ASYNC_SET_WORDS',\r\n  GET_WORDS_ERROR = 'GET_WORDS_ERROR',\r\n  ASYNC_GET_WORDS_ERROR = 'ASYNC_GET_WORDS_ERROR',\r\n  ALL_WORDS_SESSION = 'ALL_WORDS_SESSION',\r\n  ASYNC_ALL_WORDS_SESSION = 'ASYNC_ALL_WORDS_SESSION',\r\n  CLEAR_WORDS = 'CLEAR_WORDS',\r\n  ASYNC_CLEAR_WORDS = 'ASYNC_CLEAR_WORDS',\r\n  QUESSED_WORDS = 'QUESSED_WORDS',\r\n  UNPREDICTABLE_WORDS = 'UNPREDICTABLE_WORDS',\r\n  SET_SCORE = 'SET_SCORE',\r\n}\r\n","import { ActionTypes } from './constans.d';\r\nimport {\r\n  AsyncResetPasswordAction,\r\n  AsyncSignInAction,\r\n  AsyncSignInGoogleAction,\r\n  AsyncSignOutAction,\r\n  AsyncSignUpAction,\r\n  ResetPasswordAction,\r\n  SignErrorAction,\r\n  SignInAction,\r\n  SignOutAction,\r\n  SignUpAction,\r\n  User,\r\n} from '@type/types';\r\n\r\nexport const signInAction = (user: User | null): SignInAction => {\r\n  return {\r\n    type: ActionTypes.SIGN_IN,\r\n    payload: user,\r\n  };\r\n};\r\n\r\nexport const signUpAction = (user: User | null): SignUpAction => {\r\n  return {\r\n    type: ActionTypes.SIGN_UP,\r\n    payload: user,\r\n  };\r\n};\r\n\r\nexport const signOutAction = (): SignOutAction => {\r\n  return {\r\n    type: ActionTypes.SIGN_OUT,\r\n  };\r\n};\r\n\r\nexport const resetPasswordAction = (): ResetPasswordAction => {\r\n  return {\r\n    type: ActionTypes.RESET_PASSW,\r\n  };\r\n};\r\n\r\nexport const signErrorAction = (): SignErrorAction => {\r\n  return {\r\n    type: ActionTypes.SIGN_ERROR,\r\n  };\r\n};\r\n\r\nexport const asyncSignInAction = (user: User | null): AsyncSignInAction => {\r\n  return {\r\n    type: ActionTypes.ASYNC_SIGN_IN,\r\n    payload: user,\r\n  };\r\n};\r\n\r\nexport const asyncSignOutAction = (): AsyncSignOutAction => {\r\n  return {\r\n    type: ActionTypes.ASYNC_SIGN_OUT,\r\n  };\r\n};\r\n\r\nexport const asyncSignInGoogle = (\r\n  user: User | null,\r\n): AsyncSignInGoogleAction => {\r\n  return {\r\n    type: ActionTypes.ASYNC_SIGN_IN_GOOGLE,\r\n    payload: user,\r\n  };\r\n};\r\n\r\nexport const asyncSignUp = (user: User | null): AsyncSignUpAction => {\r\n  return {\r\n    type: ActionTypes.ASYNC_SIGN_UP,\r\n    payload: user,\r\n  };\r\n};\r\n\r\nexport const asyncResetPassword = (\r\n  user: User | null,\r\n): AsyncResetPasswordAction => {\r\n  return {\r\n    type: ActionTypes.ASYNC_RESET_PASSWORD,\r\n    payload: user,\r\n  };\r\n};\r\n","export enum wordsURL {\r\n  startImageUrl = 'https://raw.githubusercontent.com/vitali-kruchkou/rslang-data/master/files/image.png',\r\n  audioUrl = 'https://raw.githubusercontent.com/vitali-kruchkou/rslang-data/master/',\r\n  imageUrl = `https://raw.githubusercontent.com/vitali-kruchkou/rslang-data/master/`,\r\n}\r\n\r\nexport enum Group {\r\n  'Group 0' = 0,\r\n  'Group 1' = 1,\r\n  'Group 2' = 2,\r\n  'Group 3' = 3,\r\n  'Group 4' = 4,\r\n  'Group 5' = 5,\r\n}\r\n","import React, { useCallback, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Input } from 'antd';\r\nimport { Toaster } from 'react-hot-toast';\r\nimport Style from './StyledPasswordReset';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { userEmail } from './constants';\r\nimport { asyncResetPassword } from '@store/actions/authActions';\r\n\r\nconst PasswordReset = (): JSX.Element => {\r\n  const [email, setEmail] = useState('');\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const onChangeHandler = useCallback(\r\n    (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      const { name, value } = event.currentTarget;\r\n\r\n      if (name === userEmail) {\r\n        setEmail(value);\r\n      }\r\n    },\r\n    [],\r\n  );\r\n\r\n  const sendResetEmail = useCallback(() => {\r\n    const user = { email };\r\n    dispatch(asyncResetPassword(user));\r\n    setEmail('');\r\n  }, [dispatch, email]);\r\n\r\n  return (\r\n    <Style.Container>\r\n      <Toaster />\r\n      <Style.Form>\r\n        <Form>\r\n          <Style.Title>{t('resetPassword.title')}</Style.Title>\r\n          <Form.Item>\r\n            <Input\r\n              type={t('resetPassword.input.type')}\r\n              name={t('resetPassword.input.name')}\r\n              id={t('resetPassword.input.id')}\r\n              placeholder={t('resetPassword.input.placeholder')}\r\n              value={email}\r\n              onChange={onChangeHandler}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Style.Button>\r\n              <button className=\"ResetPas\" onClick={sendResetEmail}>\r\n                {t('resetPassword.buttonResetPassword')}\r\n              </button>\r\n            </Style.Button>\r\n          </Form.Item>\r\n          <Link to=\"/signIn\">&larr; {t('resetPassword.buttonBackSignIn')}</Link>\r\n        </Form>\r\n      </Style.Form>\r\n    </Style.Container>\r\n  );\r\n};\r\n\r\nexport default PasswordReset;\r\n","export const userEmail = 'userEmail';\r\n","import styled from 'styled-components';\r\nimport { Color } from '@core/constants/colors';\r\n\r\nconst Styled = {\r\n  Container: styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n    height: 500px;\r\n    border-radius: 3px;\r\n    padding-top: 20px;\r\n  `,\r\n  Button: styled.div`\r\n    width: 200px;\r\n    & > .SignIn {\r\n      width: 200px;\r\n      background: ${Color.AuthButton}\r\n      border: none;\r\n      font-size: 18px;\r\n      height: 30px;\r\n      color: ${Color.AuthButtonText};\r\n      transition: 0.4s linear;\r\n    }\r\n    & > .SignIn:hover {\r\n      color: ${Color.AuthButtonTextHover};\r\n      border: none;\r\n    }\r\n    & > .Google {\r\n      width: 200px;\r\n      background-color: ${Color.AuthGoogleButtonBackgroundColor};\r\n      border: none;\r\n      font-size: 15px;\r\n      height: 40px;\r\n      transition: 0.4s linear;\r\n    }\r\n    & > .Google:hover {\r\n      box-shadow: ${Color.AuthGoogleButtonHover};\r\n    }\r\n    & > .Google > span {\r\n      margin-left: 10px;\r\n    }\r\n  `,\r\n  Form: styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n    border: 1px solid ${Color.MainAuthBorder};\r\n    padding: 80px;\r\n    box-shadow: ${Color.MainAuthBorder};\r\n  `,\r\n  Title: styled.span`\r\n    font-size: 30px;\r\n    font-style: italic;\r\n  `,\r\n  Links: styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    text-align: center;\r\n    justify-content: space-between;\r\n    margin: 20px 0;\r\n  `,\r\n  MainText: styled.div`\r\n    width: 200px;\r\n    text-align: center;\r\n  `,\r\n};\r\n\r\nexport default Styled;\r\n","import React, { useCallback, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Form, Input, Divider, Tooltip } from 'antd';\r\nimport { Toaster } from 'react-hot-toast';\r\nimport {\r\n  UserOutlined,\r\n  GoogleOutlined,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport Style from './StyledSignIn';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { userEmail, userPassword } from './constants';\r\nimport { Color } from '@core/constants/colors';\r\nimport {\r\n  asyncSignInGoogle,\r\n  asyncSignInAction,\r\n} from '@store/actions/authActions';\r\n\r\nconst SignIn = (): JSX.Element => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeHandler = useCallback(\r\n    (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      const { name, value } = event.currentTarget;\r\n\r\n      if (name === userEmail) {\r\n        setEmail(value);\r\n      } else if (name === userPassword) {\r\n        setPassword(value);\r\n      }\r\n    },\r\n    [],\r\n  );\r\n\r\n  const logginGoogle = useCallback(() => {\r\n    const user = { email, password };\r\n    dispatch(asyncSignInGoogle(user));\r\n  }, [email, password, dispatch]);\r\n\r\n  const logginEmailAndPassword = useCallback(() => {\r\n    const user = { email, password };\r\n    dispatch(asyncSignInAction(user));\r\n  }, [dispatch, email, password]);\r\n\r\n  return (\r\n    <>\r\n      <Style.Container>\r\n        <Toaster />\r\n        <Style.Form>\r\n          <Form>\r\n            <Style.Title>{t('signIn.title')}</Style.Title>\r\n            <Divider />\r\n            <Style.MainText>{t('signIn.mainText1')}</Style.MainText>\r\n            <Style.MainText>{t('signIn.mainText2')}</Style.MainText>\r\n            <Divider />\r\n            <Form.Item>\r\n              <Input\r\n                type={t('signIn.input.email.type')}\r\n                name={t('signIn.input.email.name')}\r\n                placeholder={t('signIn.input.email.placeholder')}\r\n                id={t('signIn.input.email.id')}\r\n                value={email}\r\n                onChange={onChangeHandler}\r\n                prefix={<UserOutlined />}\r\n                suffix={\r\n                  <Tooltip title=\"Extra information\">\r\n                    <InfoCircleOutlined style={{ color: Color.AuthFormIcon }} />\r\n                  </Tooltip>\r\n                }\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Input.Password\r\n                type={t('signIn.input.password.type')}\r\n                name={t('signIn.input.password.name')}\r\n                placeholder={t('signIn.input.password.placeholder')}\r\n                id={t('signIn.input.password.id')}\r\n                value={password}\r\n                onChange={onChangeHandler}\r\n                suffix={\r\n                  <Tooltip title=\"Extra information\">\r\n                    <InfoCircleOutlined style={{ color: Color.AuthFormIcon }} />\r\n                  </Tooltip>\r\n                }\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Style.Button>\r\n                <button className=\"SignIn\" onClick={logginEmailAndPassword}>\r\n                  {t('signIn.buttonLogin')}\r\n                </button>\r\n              </Style.Button>\r\n              <Style.Links>\r\n                <Link to=\"/signUp\">\r\n                  <span className=\"SignUp\">{t('signIn.buttonSignUp')} </span>\r\n                </Link>{' '}\r\n                <br />\r\n                <Link to=\"/passwordReset\">\r\n                  <span>{t('signIn.buttonForgetPassword')}</span>\r\n                </Link>\r\n              </Style.Links>\r\n            </Form.Item>\r\n            <Divider plain>{t('signIn.textBeforeGoogle')}</Divider>\r\n            <Form.Item>\r\n              <Style.Button>\r\n                <button className=\"Google\" onClick={logginGoogle}>\r\n                  <GoogleOutlined />\r\n                  <span>{t('signIn.textGoogle')}</span>\r\n                </button>\r\n              </Style.Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Style.Form>\r\n      </Style.Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","export const userEmail = 'userEmail';\r\nexport const userPassword = 'userPassword';\r\n","import styled from 'styled-components';\r\nimport { Color } from '@core/constants/colors';\r\n\r\nconst Style = {\r\n  Container: styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n    height: 500px;\r\n    border-radius: 3px;\r\n    padding-top: 20px;\r\n  `,\r\n  Button: styled.div`\r\n    width: 200px;\r\n    & > .SignUp {\r\n      width: 200px;\r\n      background: ${Color.AuthButton}\r\n      border: none;\r\n      font-size: 18px;\r\n      height: 30px;\r\n      color: ${Color.AuthButtonText};\r\n      transition: 0.4s linear;\r\n    }\r\n    & > .SignUp:hover {\r\n      color: ${Color.AuthButtonTextHover};\r\n      border: none;\r\n    }\r\n    & > .Google {\r\n      width: 200px;\r\n      background-color: ${Color.AuthGoogleButtonBackgroundColor};\r\n      border: none;\r\n      font-size: 15px;\r\n      height: 40px;\r\n      transition: 0.4s linear;\r\n    }\r\n    & > .Google:hover {\r\n      box-shadow: ${Color.AuthGoogleButtonHover};\r\n    }\r\n    & > .Google > span {\r\n      margin-left: 10px;\r\n    }\r\n  `,\r\n  Form: styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n    border: 1px solid ${Color.MainAuthBorder};\r\n    padding: 80px;\r\n    box-shadow: ${Color.MainAuthBorder};\r\n  `,\r\n  Title: styled.div`\r\n    font-size: 30px;\r\n    font-style: italic;\r\n    padding-bottom: 30px;\r\n  `,\r\n  Links: styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    text-align: center;\r\n    justify-content: space-between;\r\n    margin: 20px 0;\r\n  `,\r\n};\r\n\r\nexport default Style;\r\n","import React, { useCallback, useState } from 'react';\r\nimport { Form, Input, Divider, Tooltip } from 'antd';\r\nimport { UserOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Toaster } from 'react-hot-toast';\r\nimport Style from './StyledSignUp';\r\nimport { useDispatch } from 'react-redux';\r\nimport toast from 'react-hot-toast';\r\nimport { displayFirstName, userEmail, userPassword } from './constants';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { AuthRoutes } from '@core/constants/routes';\r\nimport { Color } from '@core/constants/colors';\r\nimport { ActionTypes } from '@store/actions/constans.d';\r\nimport { asyncSignUp } from '@store/actions/authActions';\r\n\r\nconst SignUp = (): JSX.Element => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [displayName, setDisplayName] = useState('');\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const onChangeHandlerEmail = useCallback(\r\n    (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      const { name, value } = event.currentTarget;\r\n      if (name === userEmail) {\r\n        setEmail(value);\r\n      }\r\n    },\r\n    [],\r\n  );\r\n\r\n  const onChangeHandlerPassword = useCallback(\r\n    (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      const { name, value } = event.currentTarget;\r\n      if (name === userPassword) {\r\n        setPassword(value);\r\n      }\r\n    },\r\n    [],\r\n  );\r\n\r\n  const onChangeHandlerName = useCallback(\r\n    (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      const { name, value } = event.currentTarget;\r\n      if (name === displayFirstName) {\r\n        setDisplayName(value);\r\n      }\r\n    },\r\n    [],\r\n  );\r\n\r\n  const createUser = useCallback(\r\n    (event: React.SyntheticEvent) => {\r\n      const user = { email, password };\r\n      event.preventDefault();\r\n      dispatch(asyncSignUp(user));\r\n      history.push(AuthRoutes.home);\r\n    },\r\n    [dispatch, history, email, password],\r\n  );\r\n\r\n  const logginGoogle = useCallback(() => {\r\n    try {\r\n      dispatch({\r\n        type: ActionTypes.ASYNC_SIGN_IN_GOOGLE,\r\n      });\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n    }\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Style.Container>\r\n      <Toaster />\r\n      <Style.Form>\r\n        <Form>\r\n          <Style.Title>{t('signUp.title')}</Style.Title>\r\n          <Form.Item>\r\n            <Input\r\n              type={t('signUp.input.displayName.type')}\r\n              name={t('signUp.input.displayName.name')}\r\n              placeholder={t('signUp.input.displayName.placeholder')}\r\n              id={t('signUp.input.displayName.id')}\r\n              value={displayName}\r\n              onChange={onChangeHandlerName}\r\n              prefix={<UserOutlined />}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Input\r\n              type={t('signUp.input.email.type')}\r\n              name={t('signUp.input.email.name')}\r\n              placeholder={t('signUp.input.email.placeholder')}\r\n              id={t('signUp.input.email.id')}\r\n              value={email}\r\n              onChange={onChangeHandlerEmail}\r\n              prefix={<UserOutlined />}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Input.Password\r\n              type={t('signUp.input.password.type')}\r\n              name={t('signUp.input.password.name')}\r\n              placeholder={t('signUp.input.password.placeholder')}\r\n              id={t('signUp.input.password.id')}\r\n              value={password}\r\n              onChange={onChangeHandlerPassword}\r\n              suffix={\r\n                <Tooltip title=\"Extra information\">\r\n                  <InfoCircleOutlined style={{ color: Color.AuthFormIcon }} />\r\n                </Tooltip>\r\n              }\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Style.Button>\r\n              <button className=\"SignUp\" onClick={createUser}>\r\n                {t('signUp.buttonSignUp')}\r\n              </button>\r\n            </Style.Button>\r\n            <Style.Links>\r\n              <p> {t('signUp.textBeforeSignIn')}</p>\r\n              <Link to=\"/signIn\">{t('signUp.buttonSignIn')}</Link>\r\n            </Style.Links>\r\n          </Form.Item>\r\n          <Divider plain>{t('signUp.textBeforeGoogle')}</Divider>\r\n          <Form.Item>\r\n            <Style.Button onClick={logginGoogle}>\r\n              <button onClick={logginGoogle}>\r\n                {t('signUp.buttonSignInGoogle')}\r\n              </button>\r\n            </Style.Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Style.Form>\r\n    </Style.Container>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","export const userEmail = 'userEmail';\r\nexport const userPassword = 'userPassword';\r\nexport const displayFirstName = 'displayName';\r\n","import { AuthRoutes } from '@core/constants/routes';\r\nimport React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport PasswordReset from './components/PasswordReset/PasswordReset';\r\nimport SignIn from './components/SignIn/SignIn';\r\nimport SignUp from './components/SignUp/SignUp';\r\n\r\nconst Authentication = (): JSX.Element => {\r\n  return (\r\n    <Switch>\r\n      <Route path={AuthRoutes.signIn} component={SignIn} />\r\n      <Route path={AuthRoutes.signUp} component={SignUp} />\r\n      <Route path={AuthRoutes.passwordReset} component={PasswordReset} />\r\n      <Redirect from=\"/\" to={AuthRoutes.signIn} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Authentication;\r\n","const config = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nexport default config;\r\n","import firebase from '@firebase/app';\r\nimport '@firebase/auth';\r\nimport '@firebase/storage';\r\nimport '@firebase/firestore';\r\nimport '@firebase/database';\r\nimport config from './firebaseConfig';\r\n\r\nconst firebaseApp = !firebase.apps.length\r\n  ? firebase.initializeApp(config)\r\n  : firebase.app();\r\n\r\nexport const auth = firebaseApp.auth();\r\nexport const firestore = firebaseApp.firestore();\r\nconst storage = firebaseApp.storage();\r\nexport const storageRef = storage.ref();\r\nexport const database = firebaseApp.database();\r\n\r\nexport const generateUserDocument = async (user: {\r\n  email: string;\r\n  displayName: string;\r\n  photoURL: string;\r\n  uid: string;\r\n}): Promise<{ uid: string }> => {\r\n  if (!user) return;\r\n\r\n  const userRef = firestore.doc(`users/${user.uid}`);\r\n  const snapshot = await userRef.get();\r\n\r\n  if (!snapshot.exists) {\r\n    const { email, displayName, photoURL } = user;\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        photoURL,\r\n      });\r\n    } catch (error) {\r\n      console.error('Error creating user document', error);\r\n    }\r\n  }\r\n  return getUserDocument(user.uid);\r\n};\r\n\r\nconst getUserDocument = async (uid: string) => {\r\n  if (!uid) return null;\r\n  try {\r\n    const userDocument = await firestore.doc(`users/${uid}`).get();\r\n\r\n    return {\r\n      uid,\r\n      ...userDocument.data(),\r\n    };\r\n  } catch (error) {\r\n    console.error('Error fetching user', error);\r\n  }\r\n};\r\n","import styled from 'styled-components';\r\nimport { Color } from '@constants/colors';\r\n\r\nconst Style = {\r\n  Container: styled.div`\r\n    max-width: 300px;\r\n    max-height: 600px;\r\n    overflow: scroll;\r\n    margin: 0 auto;\r\n  `,\r\n  Words: styled.div`\r\n    max-width: 250px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 10px;\r\n    margin: 0 auto;\r\n  `,\r\n  UnpredWords: styled.span`\r\n    background-color: ${Color.UnpredWords};\r\n  `,\r\n  GuessedWords: styled.span`\r\n    background-color: ${Color.GuessedWords};\r\n  `,\r\n  Buttons: styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n  `,\r\n};\r\n\r\nexport default Style;\r\n","import React, { useCallback, useEffect, useState, MouseEvent } from 'react';\r\nimport { RootStateOrAny, useSelector } from 'react-redux';\r\nimport { SoundOutlined } from '@ant-design/icons';\r\nimport { wordsURL } from '@modules/HomePage/WordsList/constants';\r\nimport { useHistory } from 'react-router';\r\nimport Style from './StyledShortTermStatistics';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Button } from 'antd';\r\nimport { MainRoutes } from '@core/constants/routes';\r\n\r\nconst ShortTermStatistics: React.FC = () => {\r\n  const [guessedWords, setGuessedWords] = useState([]);\r\n  const [unpredWords, setUnpredWords] = useState([]);\r\n  const history = useHistory();\r\n  const { t } = useTranslation();\r\n\r\n  const getAllQuessedWords = useSelector(\r\n    (state: RootStateOrAny) => state.currentWords.quessedWords,\r\n  );\r\n\r\n  const getAllUnpredictableWords = useSelector(\r\n    (state: RootStateOrAny) => state.currentWords.unpredWords,\r\n  );\r\n\r\n  useEffect(() => {\r\n    setGuessedWords(getAllQuessedWords);\r\n    setUnpredWords(getAllUnpredictableWords);\r\n  }, [getAllQuessedWords, getAllUnpredictableWords]);\r\n\r\n  const audioPlay = useCallback(url => {\r\n    const audio = new Audio(wordsURL.audioUrl + url);\r\n    audio.play();\r\n  }, []);\r\n\r\n  const handlerAudioButtons = useCallback(\r\n    (audio: string) => (event: MouseEvent<HTMLButtonElement>) => {\r\n      event.preventDefault();\r\n      audioPlay(audio);\r\n    },\r\n    [audioPlay],\r\n  );\r\n\r\n  const hanlderBackButton = useCallback(\r\n    (event: MouseEvent<HTMLButtonElement>) => {\r\n      event.preventDefault();\r\n      history.push(MainRoutes.mainPage);\r\n    },\r\n    [history],\r\n  );\r\n\r\n  const hanlderStatisticsButton = useCallback(\r\n    (event: MouseEvent<HTMLButtonElement>) => {\r\n      event.preventDefault();\r\n      history.push(MainRoutes.longTermStatistics);\r\n    },\r\n    [history],\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Style.Buttons>\r\n        <Button type=\"primary\" onClick={hanlderBackButton}>\r\n          {t('ShortStatistics.buttonReturn')}\r\n        </Button>\r\n        <Button type=\"primary\" onClick={hanlderStatisticsButton}>\r\n          {t('ShortStatistics.buttonStatistics')}\r\n        </Button>\r\n      </Style.Buttons>\r\n      <h1>\r\n        {t('Statistics.unpredWords')}\r\n        <Style.UnpredWords>{unpredWords.length}</Style.UnpredWords>\r\n      </h1>\r\n      <Style.Container>\r\n        {unpredWords &&\r\n          unpredWords.map(res => {\r\n            return (\r\n              <Style.Words key={res.id}>\r\n                <SoundOutlined onClick={handlerAudioButtons(res.audio)} />\r\n                <p>{res.word}</p>\r\n                <p>{res.transcription}</p>\r\n              </Style.Words>\r\n            );\r\n          })}\r\n      </Style.Container>\r\n      <h1>\r\n        {t('Statistics.guessedWords')}\r\n        <Style.GuessedWords>{guessedWords.length}</Style.GuessedWords>\r\n      </h1>\r\n      <Style.Container>\r\n        {guessedWords &&\r\n          guessedWords.map((res, i) => {\r\n            return (\r\n              <Style.Words key={i}>\r\n                <SoundOutlined onClick={handlerAudioButtons(res.audio)} />\r\n                <p>{res.word}</p>\r\n                <p>{res.transcription}</p>\r\n              </Style.Words>\r\n            );\r\n          })}\r\n      </Style.Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShortTermStatistics;\r\n","import {\r\n  AsyncGetWordsAction,\r\n  AsyncGetWordsErrorAction,\r\n  AsyncSetWordAction,\r\n  GetWords,\r\n  GetWordsAction,\r\n  GetWordsErrorAction,\r\n  SetWordAction,\r\n  SetWord,\r\n  AllWords,\r\n  AllWordsFromSessionAction,\r\n  AsyncAllWordsFromSessionAction,\r\n  ClearWordsAction,\r\n  QuessedWords,\r\n  SetQuessedWordsAction,\r\n  SetUnpredictableWordsAction,\r\n  UnpredictableWords,\r\n  ScoreType,\r\n  SetScoreAction,\r\n} from '@type/types.d';\r\nimport { ActionTypes } from './constans.d';\r\n\r\nexport const GetWordsActions = (words: GetWords | null): GetWordsAction => ({\r\n  type: ActionTypes.GET_WORDS,\r\n  payload: words,\r\n});\r\n\r\nexport const SetWordActions = (word: SetWord | null): SetWordAction => ({\r\n  type: ActionTypes.SET_WORDS,\r\n  payload: word,\r\n});\r\n\r\nexport const AllWordsFromSessionActions = (\r\n  allWords: AllWords | null,\r\n): AllWordsFromSessionAction => ({\r\n  type: ActionTypes.ALL_WORDS_SESSION,\r\n  payload: allWords,\r\n});\r\n\r\nexport const GetWordsErrorActions = (): GetWordsErrorAction => ({\r\n  type: ActionTypes.GET_WORDS_ERROR,\r\n});\r\n\r\nexport const AsyncGetWordsActions = (\r\n  words: GetWords | null,\r\n): AsyncGetWordsAction => ({\r\n  type: ActionTypes.ASYNC_GET_WORDS,\r\n  payload: words,\r\n});\r\n\r\nexport const AsyncSetWordActions = (\r\n  setWord: string | SetWord | null,\r\n): AsyncSetWordAction => ({\r\n  type: ActionTypes.ASYNC_SET_WORDS,\r\n  payload: setWord,\r\n});\r\n\r\nexport const AsyncAllWordsFromSessionActions = (\r\n  allWords: AllWords | null,\r\n): AsyncAllWordsFromSessionAction => ({\r\n  type: ActionTypes.ASYNC_ALL_WORDS_SESSION,\r\n  payload: allWords,\r\n});\r\n\r\nexport const AsyncGetWordsErrorActions = (): AsyncGetWordsErrorAction => ({\r\n  type: ActionTypes.ASYNC_GET_WORDS_ERROR,\r\n});\r\n\r\nexport const ClearWordsActions = (): ClearWordsAction => ({\r\n  type: ActionTypes.CLEAR_WORDS,\r\n});\r\n\r\nexport const SetGuessedWordsActions = (\r\n  quessedWords: QuessedWords | null,\r\n): SetQuessedWordsAction => ({\r\n  type: ActionTypes.QUESSED_WORDS,\r\n  payload: quessedWords,\r\n});\r\n\r\nexport const SetUnpredictableWordsActions = (\r\n  unpredWords: UnpredictableWords | null,\r\n): SetUnpredictableWordsAction => ({\r\n  type: ActionTypes.UNPREDICTABLE_WORDS,\r\n  payload: unpredWords,\r\n});\r\n\r\nexport const SetScoreActions = (score: ScoreType): SetScoreAction => ({\r\n  type: ActionTypes.SET_SCORE,\r\n  payload: score,\r\n});\r\n","import styled from 'styled-components';\r\n\r\nconst Style = {\r\n  Maintext: styled.div`\r\n    text-algin: center;\r\n    max-width: 210px;\r\n    margin: 0 auto;\r\n    font-size: 25px;\r\n    text-align: center;\r\n  `,\r\n};\r\n\r\nexport default Style;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { RootStateOrAny, useDispatch, useSelector } from 'react-redux';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { WordsObject } from '@type/types';\r\nimport {\r\n  SetGuessedWordsActions,\r\n  SetScoreActions,\r\n  SetUnpredictableWordsActions,\r\n} from '@store/actions/wordsActions';\r\nimport Style from './StyledScore';\r\n\r\nconst Score: React.FC = () => {\r\n  const getAllQuessedWords = useSelector(\r\n    (state: RootStateOrAny) => state.currentWords.quessedWords,\r\n  );\r\n\r\n  const getWordsFetch = useSelector(\r\n    (state: RootStateOrAny) => state.currentWords.words,\r\n  );\r\n\r\n  const speechWord = useSelector(\r\n    (state: RootStateOrAny) => state.currentWords.setWord,\r\n  );\r\n\r\n  const getAllWords = useSelector(\r\n    (state: RootStateOrAny) => state.currentWords.allWords,\r\n  );\r\n\r\n  const getAllScore = useSelector(\r\n    (state: RootStateOrAny) => state.currentWords.score,\r\n  );\r\n\r\n  const [score, setScore] = useState(0);\r\n  const [word, setWord] = useState(getAllScore);\r\n  const [unpredWords, setUnpredWords] = useState([]);\r\n  const [guessedWords, setGuessedWords] = useState([]);\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setUnpredWords(\r\n      getAllWords.filter(\r\n        (item: WordsObject) =>\r\n          !getAllQuessedWords.some((elem: WordsObject) => elem === item),\r\n      ),\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [getAllWords, guessedWords]);\r\n\r\n  useEffect(() => {\r\n    setWord(speechWord);\r\n    unpredWords.map((item: WordsObject) => {\r\n      if (item.word === word) {\r\n        setGuessedWords([item]);\r\n      }\r\n    });\r\n  }, [speechWord, unpredWords, word]);\r\n\r\n  useEffect(() => {\r\n    setUnpredWords(\r\n      unpredWords.filter((elem: WordsObject) => !guessedWords.includes(elem)),\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [guessedWords]);\r\n\r\n  useEffect(() => {\r\n    unpredWords.map((item: WordsObject) => {\r\n      if (word) {\r\n        if (item.word === word.toLocaleLowerCase()) {\r\n          const fractionalPart = Number(getWordsFetch[0].group);\r\n          const wholePart = 10;\r\n          const numberOfPoints = (\r\n            (wholePart + fractionalPart) /\r\n            wholePart\r\n          ).toFixed(1);\r\n          setScore(\r\n            (prevNumberOfPoints: number) =>\r\n              Number(prevNumberOfPoints) + Number(numberOfPoints),\r\n          );\r\n          toast.success(`${t('Score.addScore')}`);\r\n        }\r\n      }\r\n    });\r\n  }, [getWordsFetch, t, unpredWords, word]);\r\n\r\n  useEffect(() => {\r\n    dispatch(SetGuessedWordsActions(guessedWords));\r\n    dispatch(SetUnpredictableWordsActions(unpredWords));\r\n    dispatch(SetScoreActions(score));\r\n  }, [dispatch, unpredWords, guessedWords, score]);\r\n\r\n  return (\r\n    <>\r\n      <Toaster />\r\n      <Style.Maintext>\r\n        {t('Score.mainTetx')}: {score}\r\n      </Style.Maintext>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Score;\r\n","import styled from 'styled-components';\r\nimport { Color } from '@constants/colors';\r\n\r\nconst Style = {\r\n  Container: styled.div`\r\n    width: 1100px;\r\n    height: 530px;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n  `,\r\n  Groups: styled.div`\r\n    width: 500px;\r\n    margin: 0 auto;\r\n    margin-top: 0;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n  `,\r\n  MainImage: styled.div`\r\n    margin: 0 auto;\r\n    text-align: center;\r\n  `,\r\n  WordsContainer: styled.div`\r\n    margin: 0 auto;\r\n    width: 1100px;\r\n    height: 200px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n  `,\r\n  Words: styled.div`\r\n    width: 200px;\r\n    max-height: 100px;\r\n    margin: 0 auto;\r\n    margin-bottom: 20px;\r\n    border: ${Color.WordsBorder};\r\n    border-radius: 10px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n  `,\r\n  WordsText: styled.div`\r\n    width: 100px;\r\n    text-align: center;\r\n  `,\r\n  SpokenWord: styled.div`\r\n    width: 100px;\r\n    margin: 0 auto;\r\n    font-size: 20px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n  `,\r\n};\r\n\r\nexport default Style;\r\n","import React, { useCallback, useEffect, useState, MouseEvent } from 'react';\r\nimport { RootStateOrAny, useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  AsyncAllWordsFromSessionActions,\r\n  AsyncGetWordsActions,\r\n} from '@store/actions/wordsActions';\r\nimport { Group, wordsURL } from './constants';\r\nimport Style from './StyledWordList';\r\nimport { SoundOutlined, CommentOutlined } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\n\r\nconst WordsList: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const Groups = [0, 1, 2, 3, 4, 5];\r\n  const easyGroup = 0;\r\n\r\n  const getWordsGroup = useCallback(\r\n    group => {\r\n      dispatch(AsyncGetWordsActions(group));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  useEffect(() => {\r\n    getWordsGroup(easyGroup);\r\n  }, [getWordsGroup]);\r\n\r\n  const [words, setWords] = useState([]);\r\n  const [image, setImage] = useState<string>(wordsURL.startImageUrl);\r\n  const [Buttons] = useState(Groups);\r\n\r\n  const getWordsFetch = useSelector(\r\n    (state: RootStateOrAny) => state.currentWords.words,\r\n  );\r\n\r\n  const speechWord = useSelector(\r\n    (state: RootStateOrAny) => state.currentWords.setWord,\r\n  );\r\n\r\n  const [spokenWord, setSpokenWord] = useState('');\r\n\r\n  const getAllQuessedWords = useSelector(\r\n    (state: RootStateOrAny) => state.currentWords.quessedWords,\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (speechWord) {\r\n      setSpokenWord(speechWord);\r\n    }\r\n  }, [speechWord]);\r\n\r\n  useEffect(() => {\r\n    setWords(getWordsFetch);\r\n    if (getWordsFetch) {\r\n      dispatch(\r\n        AsyncAllWordsFromSessionActions(\r\n          getWordsFetch.map((res: Record<string, unknown>) => res),\r\n        ),\r\n      );\r\n    }\r\n  }, [getWordsFetch, dispatch]);\r\n\r\n  const audioPlay = useCallback(url => {\r\n    const audio = new Audio(wordsURL.audioUrl + url);\r\n    audio.play();\r\n  }, []);\r\n\r\n  const getImages = useCallback(\r\n    image => {\r\n      setImage(wordsURL.imageUrl + image);\r\n    },\r\n    [setImage],\r\n  );\r\n\r\n  const handlerButtonsGroups = useCallback(\r\n    (group: number) => (event: MouseEvent<HTMLButtonElement>) => {\r\n      event.preventDefault();\r\n      getWordsGroup(group);\r\n    },\r\n    [getWordsGroup],\r\n  );\r\n\r\n  const handlerImagesButtons = useCallback(\r\n    (image: string) => (event: MouseEvent<HTMLDivElement>) => {\r\n      event.preventDefault();\r\n      getImages(image);\r\n    },\r\n    [getImages],\r\n  );\r\n\r\n  const handlerAudioButtons = useCallback(\r\n    (audio: string) => (event: MouseEvent<HTMLButtonElement>) => {\r\n      event.preventDefault();\r\n      audioPlay(audio);\r\n    },\r\n    [audioPlay],\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Style.Container>\r\n        <Style.Groups>\r\n          {Buttons.map((res, i) => {\r\n            return (\r\n              <Button key={res} onClick={handlerButtonsGroups(i)}>\r\n                {Group[i]}\r\n              </Button>\r\n            );\r\n          })}\r\n        </Style.Groups>\r\n        <Style.MainImage>\r\n          <img src={image} />\r\n        </Style.MainImage>\r\n        <Style.SpokenWord>\r\n          <CommentOutlined />\r\n          <span>{spokenWord}</span>\r\n        </Style.SpokenWord>\r\n        <Style.WordsContainer>\r\n          {words &&\r\n            words.map((res, i) => {\r\n              return (\r\n                <Style.Words\r\n                  key={i}\r\n                  onClick={handlerImagesButtons(res.image)}\r\n                  className={\r\n                    getAllQuessedWords.includes(res) ? 'Active' : undefined\r\n                  }>\r\n                  <SoundOutlined onClick={handlerAudioButtons(res.audio)} />\r\n                  <Style.WordsText>\r\n                    <p>{res.word}</p>\r\n                    <p>{res.transcription}</p>\r\n                  </Style.WordsText>\r\n                </Style.Words>\r\n              );\r\n            })}\r\n        </Style.WordsContainer>\r\n      </Style.Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WordsList;\r\n","import styled from 'styled-components';\r\n\r\nconst Style = {\r\n  Buttons: styled.div`\r\n    width: 600px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    & > #buttonSpeak {\r\n      width: 400px;\r\n    }\r\n    & > button {\r\n      font-size: 20px;\r\n      height: 40px;\r\n    }\r\n  `,\r\n};\r\n\r\nexport default Style;\r\n","import React, { useCallback, useEffect, useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  AsyncGetWordsActions,\r\n  AsyncSetWordActions,\r\n  ClearWordsActions,\r\n} from '@store/actions/wordsActions';\r\nimport SpeechRecognition, {\r\n  useSpeechRecognition,\r\n} from 'react-speech-recognition';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Style from './StyledSpeechRecording';\r\nimport { Button } from 'antd';\r\n\r\nconst SpeechRecording: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { transcript, resetTranscript } = useSpeechRecognition();\r\n  const microphoneRef = useRef(null);\r\n  const { t } = useTranslation();\r\n\r\n  const getWordsGroup = useCallback(\r\n    group => {\r\n      dispatch(AsyncGetWordsActions(group));\r\n    },\r\n    [dispatch],\r\n  );\r\n  useEffect(() => {\r\n    if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\r\n      alert(`${t('SpeechRecording.notBrowserSupportSpeechRecording')}`);\r\n    }\r\n  }, [t]);\r\n\r\n  const renderSpeech = useCallback(() => {\r\n    microphoneRef.current.classList.add('listening');\r\n    SpeechRecognition.startListening({ language: 'en-US' });\r\n  }, []);\r\n\r\n  const stopHandle = useCallback(() => {\r\n    microphoneRef.current.classList.remove('listening');\r\n    SpeechRecognition.stopListening();\r\n  }, []);\r\n\r\n  const handleReset = useCallback(() => {\r\n    stopHandle();\r\n    resetTranscript();\r\n    getWordsGroup(0);\r\n    dispatch(ClearWordsActions());\r\n  }, [getWordsGroup, resetTranscript, stopHandle, dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(AsyncSetWordActions(transcript.toLocaleLowerCase()));\r\n  }, [dispatch, transcript]);\r\n\r\n  return (\r\n    <>\r\n      <Style.Buttons>\r\n        <Button type=\"primary\" onClick={handleReset}>\r\n          {t('SpeechRecording.buttonReset')}\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={renderSpeech}\r\n          ref={microphoneRef}\r\n          id=\"buttonSpeak\">\r\n          {t('SpeechRecording.buttonSpeak')}\r\n        </Button>\r\n      </Style.Buttons>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SpeechRecording;\r\n","import styled from 'styled-components';\r\n\r\nconst Style = {\r\n  Buttons: styled.div`\r\n    max-width: 800px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin: 0 auto;\r\n    & > button {\r\n      font-size: 20px;\r\n      height: 40px;\r\n    }\r\n  `,\r\n  Header: styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  `,\r\n};\r\n\r\nexport default Style;\r\n","import React, { MouseEvent, useCallback, useEffect, useState } from 'react';\r\nimport Score from '../Score/Score';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { RootStateOrAny, useDispatch, useSelector } from 'react-redux';\r\nimport WordsList from '../WordsList/WordsList';\r\nimport SpeechRecording from '../SpeechRecording/SpeechRecording';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { asyncSignOutAction } from '@store/actions/authActions';\r\nimport { database } from '@firebaseConfig/index';\r\nimport { ClearWordsActions } from '@store/actions/wordsActions';\r\nimport Style from './StyledMainPage';\r\nimport { Button } from 'antd';\r\nimport { MainRoutes } from '@core/constants/routes';\r\n\r\nconst MainPage: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n  const user = useSelector((state: RootStateOrAny) => state.currentAuth.user);\r\n  const startScore = 0;\r\n  const [dbScore, setDbScore] = useState<number>(startScore);\r\n\r\n  const getAllScore = useSelector(\r\n    (state: RootStateOrAny) => state.currentWords.score,\r\n  );\r\n\r\n  useEffect(() => {\r\n    database\r\n      .ref()\r\n      .child('users')\r\n      .child(`${user.uid}`)\r\n      .on('value', snapshot => {\r\n        if (snapshot.val().score) {\r\n          setDbScore(Number(startScore));\r\n        }\r\n        if (snapshot.val().score !== undefined) {\r\n          setDbScore(snapshot.val().score);\r\n        }\r\n      });\r\n  }, [user]);\r\n\r\n  const signOut = useCallback(() => {\r\n    dispatch(asyncSignOutAction());\r\n    dispatch(ClearWordsActions());\r\n  }, [dispatch]);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleResultsButton = useCallback(\r\n    (event: MouseEvent<HTMLButtonElement>) => {\r\n      event.preventDefault();\r\n      history.push(MainRoutes.shortTermStatistics);\r\n      const now = new Date().toLocaleString();\r\n      database\r\n        .ref()\r\n        .child('users')\r\n        .child(`${user.uid}`)\r\n        .child('score')\r\n        .set(getAllScore + dbScore);\r\n      database.ref().child('users').child(`${user.uid}`).child('date').set(now);\r\n    },\r\n    [dbScore, getAllScore, history, user.uid],\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Style.Header>\r\n        <Button onClick={signOut}>{t('signOut.buttonSignOut')}</Button>\r\n        <Score />\r\n      </Style.Header>\r\n      <WordsList />\r\n      <Style.Buttons>\r\n        <SpeechRecording />\r\n        <Button type=\"primary\" onClick={handleResultsButton}>\r\n          Results\r\n        </Button>\r\n      </Style.Buttons>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import styled from 'styled-components';\r\n\r\nconst Style = {\r\n  UsersTable: styled.table`\r\n    margin: 0 auto;\r\n    font-size: 20px;\r\n    & > tr > th {\r\n      padding: 10px;\r\n      text-align: center;\r\n    }\r\n    & > tr > td {\r\n      padding: 10px;\r\n      text-align: center;\r\n    }\r\n  `,\r\n};\r\n\r\nexport default Style;\r\n","import React, { MouseEvent, useCallback, useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { database } from '@firebaseConfig/index';\r\nimport Style from './StyledLongTermStatistics';\r\nimport { Button } from 'antd';\r\nimport { MainRoutes } from '@core/constants/routes';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst LongTermStatistics: React.FC = () => {\r\n  const [info, setInfo] = useState([]);\r\n  const history = useHistory();\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    database\r\n      .ref()\r\n      .child('/users')\r\n      .on('value', snapshot => {\r\n        setInfo(Object.values(snapshot.val()));\r\n      });\r\n  }, []);\r\n\r\n  const sorted = [...info].sort((a, b) => {\r\n    return b.score - a.score;\r\n  });\r\n\r\n  const handlerSortButtons = useCallback(\r\n    (event: MouseEvent<HTMLButtonElement>) => {\r\n      event.preventDefault();\r\n      setInfo(sorted);\r\n    },\r\n    [sorted],\r\n  );\r\n\r\n  const hanlderBackButton = useCallback(\r\n    (event: MouseEvent<HTMLButtonElement>) => {\r\n      event.preventDefault();\r\n      history.push(MainRoutes.shortTermStatistics);\r\n    },\r\n    [history],\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" onClick={hanlderBackButton}>\r\n        {t('LongStatistics.buttonReturn')}\r\n      </Button>\r\n      <Button onClick={handlerSortButtons}>\r\n        {t('LongStatistics.sortByScore')}\r\n      </Button>\r\n      <Style.UsersTable>\r\n        <tr>\r\n          <tr>{t('LongStatistics.position')}</tr>\r\n          <th>{t('LongStatistics.email')}</th>\r\n          <th>{t('LongStatistics.displayName')}</th>\r\n          <th>{t('LongStatistics.score')}</th>\r\n          <th>{t('LongStatistics.date')}</th>\r\n        </tr>\r\n        {info.map(\r\n          (\r\n            res: {\r\n              date: string;\r\n              displayName: string;\r\n              email: string;\r\n              photoURL: string;\r\n              score: number;\r\n              uid: string;\r\n            },\r\n            i: number,\r\n          ) => {\r\n            return (\r\n              <tr key={res.uid}>\r\n                <td>{++i}</td>\r\n                <td>{res.email}</td>\r\n                <td>{res.displayName}</td>\r\n                <td>{res.score}</td>\r\n                <td>{res.date}</td>\r\n              </tr>\r\n            );\r\n          },\r\n        )}\r\n      </Style.UsersTable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LongTermStatistics;\r\n","import styled from 'styled-components';\r\n\r\nconst Style = {\r\n  Container: styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    margin-right: -50%;\r\n    transform: translate(-50%, -50%);\r\n    text-align: center;\r\n    & > button {\r\n      width: 400px;\r\n      height: 60px;\r\n      font-size: 30px;\r\n    }\r\n  `,\r\n};\r\n\r\nexport default Style;\r\n","import React, { MouseEvent, useCallback } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from 'react-router';\r\nimport Style from './StyledStartPage';\r\nimport { Button } from 'antd';\r\nimport { MainRoutes } from '@core/constants/routes';\r\n\r\nconst StartPage: React.FC = () => {\r\n  const history = useHistory();\r\n  const { t } = useTranslation();\r\n\r\n  const handleStartButton = useCallback(\r\n    (event: MouseEvent<HTMLButtonElement>) => {\r\n      event.preventDefault();\r\n      history.push(MainRoutes.mainPage);\r\n    },\r\n    [history],\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Style.Container>\r\n        <h1>{t('StartPage.HeaderText')}</h1>\r\n        <h3>{t('StartPage.MainText')}</h3>\r\n        <Button type=\"primary\" onClick={handleStartButton}>\r\n          {t('StartPage.buttonStart')}\r\n        </Button>\r\n      </Style.Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StartPage;\r\n","import React from 'react';\r\nimport ShortTermStatistics from '@modules/HomePage/StatisticsPage/ShortTermStatistics/ShortTermStatistics';\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport MainPage from './MainPage/MainPage';\r\nimport LongTermStatistics from './StatisticsPage/LongTermStatistics/LongTermStatistics';\r\nimport StartPage from './MainPage/StartPage/StartPage';\r\nimport { MainRoutes } from '@constants/routes';\r\n\r\nconst HomePage: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route\r\n          path={MainRoutes.shortTermStatistics}\r\n          component={ShortTermStatistics}\r\n        />\r\n        <Route\r\n          path={MainRoutes.longTermStatistics}\r\n          component={LongTermStatistics}\r\n        />\r\n        <Route path={MainRoutes.mainPage} component={MainPage} />\r\n        <Route path={MainRoutes.startPage} component={StartPage} />\r\n        <Route path=\"/\">\r\n          <Redirect to={MainRoutes.startPage} />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useEffect } from 'react';\r\nimport { Toaster } from 'react-hot-toast';\r\nimport { RootStateOrAny, useDispatch, useSelector } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Authentication from '@modules/Authentication/Authentication';\r\nimport { generateUserDocument, auth, database } from '@firebaseConfig/index';\r\nimport { signInAction } from '@store/actions/authActions';\r\nimport HomePage from '@modules/HomePage/HomePage';\r\n\r\nconst Routes: React.FC = () => {\r\n  const user = useSelector((state: RootStateOrAny) => state.currentAuth);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(async userAuth => {\r\n      const user = await generateUserDocument(userAuth);\r\n      if (user) {\r\n        dispatch(signInAction(user));\r\n        database.ref().child('users').child(`${user.uid}`).set(user);\r\n      }\r\n    });\r\n  }, [dispatch]);\r\n\r\n  return user.login ? (\r\n    <>\r\n      <Toaster />\r\n      <Router>\r\n        <HomePage />\r\n      </Router>\r\n    </>\r\n  ) : (\r\n    <Router>\r\n      <Authentication />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport Routes from '@routes/Routes';\r\nimport './App.css';\r\n\r\nfunction App(): JSX.Element {\r\n  return <Routes />;\r\n}\r\n\r\nexport default App;\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n\r\nimport EN from './locales/en/translation.json';\r\n\r\ni18n\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    resources: {\r\n      en: {\r\n        translation: EN,\r\n      },\r\n    },\r\n    lng: 'en',\r\n    fallbackLng: 'en',\r\n    react: {\r\n      useSuspense: false,\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","const initialState: AuthState = {\r\n  login: false as boolean,\r\n  user: null as null,\r\n};\r\nimport { ActionTypes } from '@store/actions/constans.d';\r\nimport { AuthActions, AuthState } from '@type/types';\r\n\r\nconst currentAuth = (\r\n  state: AuthState = initialState,\r\n  action: AuthActions,\r\n): AuthState => {\r\n  switch (action.type) {\r\n    case ActionTypes.SIGN_IN: {\r\n      return {\r\n        ...state,\r\n        login: true,\r\n        user: action.payload,\r\n      };\r\n    }\r\n    case ActionTypes.SIGN_OUT: {\r\n      return {\r\n        ...state,\r\n        login: false,\r\n        user: null,\r\n      };\r\n    }\r\n    case ActionTypes.RESET_PASSW: {\r\n      return {\r\n        ...state,\r\n        login: false,\r\n      };\r\n    }\r\n    case ActionTypes.SIGN_UP: {\r\n      return {\r\n        ...state,\r\n        login: true,\r\n        user: action.payload,\r\n      };\r\n    }\r\n    case ActionTypes.SIGN_ERROR: {\r\n      return {\r\n        ...state,\r\n        login: false,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default currentAuth;\r\n","import { ScoreType } from './../../type/types.d';\r\nimport { ActionTypes } from '@store/actions/constans.d';\r\nimport {\r\n  AllWords,\r\n  GetWords,\r\n  QuessedWords,\r\n  SetWord,\r\n  UnpredictableWords,\r\n  WordsActions,\r\n  WordsObject,\r\n} from '@type/types';\r\n\r\nexport interface WordsState {\r\n  words: GetWords | [];\r\n  setWord: SetWord;\r\n  allWords: AllWords;\r\n  quessedWords: QuessedWords;\r\n  unpredWords: UnpredictableWords;\r\n  score: ScoreType;\r\n}\r\n\r\nconst initialState: WordsState = {\r\n  allWords: [],\r\n  words: [],\r\n  quessedWords: [],\r\n  unpredWords: [],\r\n  setWord: '',\r\n  score: null as null,\r\n};\r\n\r\nconst currentWords = (\r\n  state: WordsState = initialState,\r\n  action: WordsActions,\r\n): WordsState => {\r\n  switch (action.type) {\r\n    case ActionTypes.GET_WORDS: {\r\n      return {\r\n        ...state,\r\n        words: action.payload,\r\n      };\r\n    }\r\n    case ActionTypes.SET_WORDS: {\r\n      return {\r\n        ...state,\r\n        setWord: action.payload,\r\n      };\r\n    }\r\n    case ActionTypes.ALL_WORDS_SESSION: {\r\n      return {\r\n        ...state,\r\n        allWords: [\r\n          ...state.allWords,\r\n          ...(action.payload || [])\r\n            .flat()\r\n            .filter(\r\n              (item: WordsObject) =>\r\n                !state.allWords.some(\r\n                  (elem: WordsObject) => item.id === elem.id,\r\n                ),\r\n            ),\r\n        ],\r\n      };\r\n    }\r\n    case ActionTypes.CLEAR_WORDS: {\r\n      return {\r\n        ...state,\r\n        allWords: [],\r\n        words: [],\r\n        quessedWords: [],\r\n        unpredWords: [],\r\n        setWord: '',\r\n        score: null as null,\r\n      };\r\n    }\r\n    case ActionTypes.QUESSED_WORDS: {\r\n      return {\r\n        ...state,\r\n        quessedWords: [\r\n          ...state.quessedWords,\r\n          ...(action.payload || []).filter(\r\n            (item: WordsObject) =>\r\n              !state.quessedWords.some(\r\n                (elem: WordsObject) => item.id === elem.id,\r\n              ),\r\n          ),\r\n        ],\r\n      };\r\n    }\r\n    case ActionTypes.UNPREDICTABLE_WORDS: {\r\n      return {\r\n        ...state,\r\n        unpredWords: action.payload,\r\n      };\r\n    }\r\n    case ActionTypes.SET_SCORE: {\r\n      return {\r\n        ...state,\r\n        score: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default currentWords;\r\n","import { combineReducers } from 'redux';\r\nimport currentAuth from './currentAuth';\r\nimport currentWords from './currentWords';\r\n\r\nconst rootReducer = combineReducers({\r\n  currentAuth,\r\n  currentWords,\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from 'firebase';\r\nimport toast from 'react-hot-toast';\r\nimport { auth, generateUserDocument } from '.';\r\nimport i18n from '@i18n/index';\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport const resetPassword = async (email: string): Promise<void> => {\r\n  await auth.sendPasswordResetEmail(email);\r\n  toast.success(`${i18n.t('toasts.resetPasswordSuccess')}`);\r\n};\r\n\r\nexport const authStateChange = (): void => {\r\n  auth.onAuthStateChanged(async userAuth => {\r\n    const user = await generateUserDocument(userAuth);\r\n    return user;\r\n  });\r\n};\r\n\r\nexport const signInEmailAndPassword = async (\r\n  email: string,\r\n  password: string,\r\n): Promise<void> => {\r\n  await auth.signInWithEmailAndPassword(email, password);\r\n  toast.success(`${i18n.t('toasts.signInSuccess')}`);\r\n};\r\n\r\nexport const signInWithGoogle = async (): Promise<void> => {\r\n  await auth.signInWithPopup(provider);\r\n  toast.success(`${i18n.t('toasts.signInSuccess')}`);\r\n};\r\n\r\nexport const signUpEmailAndPassword = async (\r\n  email: string,\r\n  password: string,\r\n): Promise<void> => {\r\n  await auth.createUserWithEmailAndPassword(email, password);\r\n  toast.success(`${i18n.t('toasts.signUpSuccess')}`);\r\n};\r\n\r\nexport const signOut = async (): Promise<void> => {\r\n  await auth.signOut();\r\n};\r\n","import { resetPassword } from '@firebaseConfig/firebaseAuthQueries';\r\nimport { call, put, takeLatest } from '@redux-saga/core/effects';\r\nimport {\r\n  resetPasswordAction,\r\n  signErrorAction,\r\n} from '@store/actions/authActions';\r\nimport { ActionTypes } from '@store/actions/constans.d';\r\nimport { AsyncResetPasswordAction } from '@type/types';\r\n\r\nexport const workerAuthResetPassword = function* (\r\n  action: AsyncResetPasswordAction,\r\n): Generator {\r\n  const { email } = action.payload;\r\n  try {\r\n    yield call(resetPassword, email);\r\n    yield put(resetPasswordAction());\r\n  } catch {\r\n    yield put(signErrorAction());\r\n  }\r\n};\r\n\r\nexport default function* watchAuthResetPassword(): Generator {\r\n  yield takeLatest(ActionTypes.ASYNC_RESET_PASSWORD, workerAuthResetPassword);\r\n}\r\n","import { signOut } from '@firebaseConfig/firebaseAuthQueries';\r\nimport { call, put, takeLatest } from '@redux-saga/core/effects';\r\nimport { signErrorAction, signOutAction } from '@store/actions/authActions';\r\nimport { ActionTypes } from '@store/actions/constans.d';\r\n\r\nexport const workerAuthSignOut = function* (): Generator {\r\n  try {\r\n    yield call(signOut);\r\n    yield put(signOutAction());\r\n  } catch {\r\n    yield put(signErrorAction());\r\n  }\r\n};\r\n\r\nexport default function* watchAuthSignOut(): Generator {\r\n  yield takeLatest(ActionTypes.ASYNC_SIGN_OUT, workerAuthSignOut);\r\n}\r\n","import { signInWithGoogle } from '@firebaseConfig/firebaseAuthQueries';\r\nimport { call, put, takeLatest } from '@redux-saga/core/effects';\r\nimport { signErrorAction, signInAction } from '@store/actions/authActions';\r\nimport { ActionTypes } from '@store/actions/constans.d';\r\n\r\nexport const workerAuthSignInGoogle = function* (): Generator {\r\n  try {\r\n    const authChannel = yield call(signInWithGoogle);\r\n    if (authChannel) {\r\n      yield put(signInAction(authChannel));\r\n    }\r\n  } catch {\r\n    yield put(signErrorAction());\r\n  }\r\n};\r\n\r\nexport default function* watchAuthSignInGoogle(): Generator {\r\n  yield takeLatest(ActionTypes.ASYNC_SIGN_IN_GOOGLE, workerAuthSignInGoogle);\r\n}\r\n","import { signInEmailAndPassword } from '@firebaseConfig/firebaseAuthQueries';\r\nimport { call, put, takeLatest } from '@redux-saga/core/effects';\r\nimport { signErrorAction, signInAction } from '@store/actions/authActions';\r\nimport { ActionTypes } from '@store/actions/constans.d';\r\nimport { AsyncSignInAction } from '@type/types';\r\n\r\nexport function* workerAuthSignIn(action: AsyncSignInAction): Generator {\r\n  const { email, password } = action.payload;\r\n\r\n  try {\r\n    const authChannel = yield call(signInEmailAndPassword, email, password);\r\n    if (authChannel) {\r\n      yield put(signInAction(authChannel));\r\n    }\r\n  } catch {\r\n    yield put(signErrorAction());\r\n  }\r\n}\r\n\r\nexport default function* watchAuthSignIn(): Generator {\r\n  yield takeLatest(ActionTypes.ASYNC_SIGN_IN, workerAuthSignIn);\r\n}\r\n","import { signUpEmailAndPassword } from '@firebaseConfig/firebaseAuthQueries';\r\nimport { call, put, takeLatest } from '@redux-saga/core/effects';\r\nimport { signErrorAction, signUpAction } from '@store/actions/authActions';\r\nimport { ActionTypes } from '@store/actions/constans.d';\r\nimport { AsyncSignUpAction } from '@type/types';\r\n\r\nexport const workerAuthSignUp = function* (\r\n  action: AsyncSignUpAction,\r\n): Generator {\r\n  const { email, password } = action.payload;\r\n  try {\r\n    const authChannel = yield call(signUpEmailAndPassword, email, password);\r\n    if (authChannel) {\r\n      yield put(signUpAction(authChannel));\r\n    }\r\n  } catch {\r\n    yield put(signErrorAction());\r\n  }\r\n};\r\n\r\nexport default function* watchAuthSignUp(): Generator {\r\n  yield takeLatest(ActionTypes.ASYNC_SIGN_UP, workerAuthSignUp);\r\n}\r\n","export const wordsUrl = `https://afternoon-falls-25894.herokuapp.com/words?`;\r\n","import { call, put, takeLatest } from '@redux-saga/core/effects';\r\nimport { ActionTypes } from '@store/actions/constans.d';\r\nimport {\r\n  GetWordsActions,\r\n  GetWordsErrorActions,\r\n} from '@store/actions/wordsActions';\r\nimport { AsyncGetWordsAction } from '@type/types';\r\nimport { wordsUrl } from './constants';\r\n\r\nexport const fetchWordsAsync = function* (\r\n  action: AsyncGetWordsAction,\r\n): Generator {\r\n  try {\r\n    const group = action.payload;\r\n    const maxGroupNumber = 30;\r\n    const minGroupNumber = 0;\r\n    const wordsFetch = yield call(() => {\r\n      const page =\r\n        Math.floor(\r\n          Math.random() *\r\n            (Math.floor(maxGroupNumber) - Math.ceil(minGroupNumber)),\r\n        ) + Math.ceil(minGroupNumber);\r\n      const url = wordsUrl + `page=${page}` + `&group=${group}`;\r\n      return fetch(url).then(res => res.json());\r\n    });\r\n    const maxWordCount = 10;\r\n    const words = Object.values(wordsFetch);\r\n    const numbers = new Set();\r\n    while (numbers.size < maxWordCount) {\r\n      const randomWord = Math.floor(Math.random() * words.length);\r\n      const items = words[randomWord];\r\n      numbers.add(items);\r\n    }\r\n    const arr: unknown = Array.from(numbers);\r\n    yield put(GetWordsActions(arr));\r\n  } catch {\r\n    yield put(GetWordsErrorActions());\r\n  }\r\n};\r\n\r\nexport default function* watchWordsGet(): Generator {\r\n  yield takeLatest(ActionTypes.ASYNC_GET_WORDS, fetchWordsAsync);\r\n}\r\n","import { put, takeLatest } from '@redux-saga/core/effects';\r\nimport { ActionTypes } from '@store/actions/constans.d';\r\nimport {\r\n  GetWordsErrorActions,\r\n  SetWordActions,\r\n} from '@store/actions/wordsActions';\r\nimport { AsyncSetWordAction } from '@type/types';\r\n\r\nexport const workerSetWordsAsync = function* (\r\n  action: AsyncSetWordAction,\r\n): Generator {\r\n  try {\r\n    yield put(SetWordActions(action.payload));\r\n  } catch {\r\n    yield put(GetWordsErrorActions());\r\n  }\r\n};\r\n\r\nexport default function* watchWordsSet(): Generator {\r\n  yield takeLatest(ActionTypes.ASYNC_SET_WORDS, workerSetWordsAsync);\r\n}\r\n","import { put, takeLatest } from '@redux-saga/core/effects';\r\nimport { ActionTypes } from '@store/actions/constans.d';\r\nimport {\r\n  GetWordsErrorActions,\r\n  AllWordsFromSessionActions,\r\n} from '@store/actions/wordsActions';\r\nimport { AsyncAllWordsFromSessionAction } from '@type/types';\r\n\r\nexport const workerAllWordsAsync = function* (\r\n  action: AsyncAllWordsFromSessionAction,\r\n): Generator {\r\n  try {\r\n    yield put(AllWordsFromSessionActions(action.payload));\r\n  } catch {\r\n    yield put(GetWordsErrorActions());\r\n  }\r\n};\r\n\r\nexport default function* watchAllWords(): Generator {\r\n  yield takeLatest(ActionTypes.ASYNC_ALL_WORDS_SESSION, workerAllWordsAsync);\r\n}\r\n","import { all } from '@redux-saga/core/effects';\r\nimport watchAuthResetPassword from './authSaga/resetPasswordSaga';\r\nimport watchAuthSignOut from './authSaga/sighOutSaga';\r\nimport watchAuthSignInGoogle from './authSaga/signInGoogleSaga';\r\nimport watchAuthSignIn from './authSaga/signInSaga';\r\nimport watchAuthSignUp from './authSaga/signUpSaga';\r\nimport watchWordsGet from './wordsSaga/getWordsSaga';\r\nimport watchWordsSet from './wordsSaga/setWordSaga';\r\nimport watchAllWords from './wordsSaga/allWordsSaga';\r\n\r\nexport default function* rootSaga(): Generator {\r\n  yield all([\r\n    watchAuthResetPassword(),\r\n    watchAuthSignIn(),\r\n    watchAuthSignUp(),\r\n    watchAuthSignInGoogle(),\r\n    watchAuthSignOut(),\r\n    watchWordsGet(),\r\n    watchWordsSet(),\r\n    watchAllWords(),\r\n  ]);\r\n}\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport rootReducer from './reducers/rootReducer';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './core/i18n';\r\nimport store from '@store/index';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}